###############################################
# CRUD Usuarios + Login + Roles + Búsqueda
###############################################

### Obtener toda la lista de usuarios
GET http://localhost:8080/usuarioslist
Accept: application/json

### Agregar un nuevo usuario
POST http://localhost:8080/usuarioslist
Content-Type: application/json

{
  "username": "jemimi",
  "email": "jemimiara@gmail.com",
  "password": "123456",
  "role_id": 2
}

### Eliminar un usuario por ID
DELETE http://localhost:8080/usuarioslist/7
Accept: application/json

### Actualizar usuario por ID
PUT http://localhost:8080/usuarioslist/6
Content-Type: application/json

{
  "username": "Liss",
  "email": "emylis@gmail.com",
  "password": "123456",
  "role_id": 1
}


### Obtener todos los roles
GET http://localhost:8080/usuarioslist/roles
Accept: application/json

### ---------------------------
### RUTAS DE BÚSQUEDA POR EMAIL Y/O ROL
### ---------------------------

### Buscar todos los usuarios (sin filtros)
GET http://localhost:8080/usuarioslist/buscar
Accept: application/json

### Buscar usuarios por email
GET http://localhost:8080/usuarioslist/buscar?email=emily
Accept: application/json

### Buscar usuarios por rol (role_id)
GET http://localhost:8080/usuarioslist/buscar?role_id=3
Accept: application/json

### Buscar usuarios por email y rol combinados
GET http://localhost:8080/usuarioslist/buscar?email=emily&role_id=2
Accept: application/json


### Obtener un usuario por ID (ruta protegida)
GET http://localhost:8080/usuarioslist/6
Authorization: Bearer <TU_TOKEN>
Accept: application/json

### Login (obtener token JWT)
POST http://localhost:8080/usuarioslist/login
Content-Type: application/json

{
  "email": "emylis@gmail.com",
  "password": "123456"
}